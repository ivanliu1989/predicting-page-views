setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\predicting-page-views")
setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\predicting-page-views")
top.100.sites <- read.csv('data/top_1000_sites.csv',sep='\t',stringsAsFactors=F)
top.100.sites <- read.csv('data/top_1000_sites.tsv',sep='\t',stringsAsFactors=F)
top.1000.sites <- read.csv('data/top_1000_sites.tsv',sep='\t',stringsAsFactors=F)
str(top.1000.sites)
rm(top.100.sites)
head(top.1000.sites)
require(ggplot)
require(ggplot2)
ggplot(top.1000.sites,aes(PageViews, UniqueVisitors)) + geom_point()
ggplot(top.1000.sites,aes(PageViews)) + geom_density()
ggplot(top.1000.sites,aes(log(PageViews), log(UniqueVisitors))) + geom_point()
ggplot(top.1000.sites,aes(log(PageViews))) + geom_density()
geim_smooth(method='lm',se=F)
ggplot(top.1000.sites,aes(log(PageViews), log(UniqueVisitors))) + geom_point() +
geim_smooth(method='lm',se=F)
ggplot(top.1000.sites,aes(log(PageViews), log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
png('PageViews_UniView.png')
ggplot(top.1000.sites,aes(log(PageViews), log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
dev.off()
ggplot(top.1000.sites,aes(log(PageViews))) + geom_density()
ggplot(top.1000.sites,aes(log(PageViews), log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
ggplot(top.1000.sites,aes(x=log(PageViews), y=log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
ggplot(top.1000.sites,aes(y=log(PageViews), x=log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
png('PageViews_UniView.png')
ggplot(top.1000.sites,aes(y=log(PageViews), x=log(UniqueVisitors))) + geom_point() +
geom_smooth(method='lm',se=F)
dev.off()
lm.fit <- lm(log(PageViews)~log(UniqueVisitors), data=top.1000.sites)
summary(lm.fit)
residuals(lm.fit)
quantile(residuals(lm.fit))
summary(lm.fit)
plot(lm.fit)
lm.fit <- lm(log(PageViews)~HasAdvertising + log(UniqueVisitors) + InEnglish, data=top.1000.sites)
summary(lm.fit)
par(mf=c(2,2))
plot(lm.fit)
par(mf=c(2,2))
plot(lm.fit)
par(mfcol = c(2,2))
plot(lm.fit)
plot(lm.fit)
png('lm_plot.png')
par(mfcol = c(2,2))
plot(lm.fit)
dev.off()
attach(top.1000.sites)
cov(log(PageViews),HasAdvertising)
cov(log(PageViews),log(UniqueVisitors))
cov(log(PageViews),InEnglish)
detach
detach(top.1000.sites)
# predict web traffic
setwd("C:\\Documents and Settings\\Macro\\Desktop\\Ivandata\\predicting-page-views")
require(ggplot2)
top.1000.sites <- read.csv('data/top_1000_sites.tsv',sep='\t',stringsAsFactors=F)
head(top.1000.sites)
top.1000.sites <- transform(top.1000.sites, repeatedVisitor = PageViews - UniqueVisitors)
head(top.1000.sites)
ggplot(top.1000.sites,aes(y=log(PageViews), x=log(repeatedVisitor))) + geom_point() +
geom_smooth(method='lm',se=F)
lm.fit.2 <- lm(repeatedVisitor ~ ., top.1000.sites)
summary(lm.fit.2)
lm.fit.2 <- lm(repeatedVisitor ~ HasAdvertising + InEnglish, top.1000.sites)
summary(lm.fit.2)
head(top.1000.sites)
lm.fit.2 <- lm(repeatedVisitor ~ HasAdvertising + InEnglish + TLD + Reach + Category, top.1000.sites)
summary(lm.fit.2)
summary(lm.fit.2)
png('lm_plot_2.png')
par(mfcol = c(2,2))
plot(lm.fit.2)
dev.off()
